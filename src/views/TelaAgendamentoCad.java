package views;

import conexao.Conexao;
import data.Agendamentos;
import data.AgendamentosDao;
import data.Clientes;
import data.ClientesDao;
import data.Funcionarios;
import data.FuncionariosDao;
import data.Servicos;
import data.ServicosDao;
import java.awt.Color;
import static java.awt.image.ImageObserver.WIDTH;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lucas
 */
public class TelaAgendamentoCad extends javax.swing.JFrame { 
    
    private void preencheTabela(){
        AgendamentosDao agendDao = new AgendamentosDao();
        
        List<Agendamentos> listaAgendamentos = agendDao.listaAgendamentos();
        DefaultTableModel tableAgendamentos = (DefaultTableModel) tblAgendamentos.getModel();
        tableAgendamentos.setNumRows(0);
        
        for(Agendamentos a: listaAgendamentos){
            Object[] obj = new Object[]{
                a.getId(),
                a.getDataAgendamento(),
                a.getServico().getNome(),
                a.getFuncionario().getNome(),
                a.getCliente().getNome(),
                a.getTipoPagamento()
            };
            tableAgendamentos.addRow(obj);
            agendDao.listaAgendamentos();
        }
    }
    /**
     * Creates new form TelaAgendamento
     */
    public TelaAgendamentoCad() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("AGENDAMENTOS");
        Color corFundo = new Color(24, 9, 0);
        jPanel1.setBackground(corFundo);
        txtID.setEnabled(false);
        preencheTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botaoLimpar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAgendamentos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtBuscaNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtFuncionario = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtServicoId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDataHora = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        txtPagamento1 = new javax.swing.JTextField();
        lblTipoPag1 = new javax.swing.JLabel();
        botaoAtualizar = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        botaoAgendar = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        botaoBuscar1 = new javax.swing.JButton();

        botaoLimpar.setBackground(new java.awt.Color(172, 137, 82));
        botaoLimpar.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        botaoLimpar.setForeground(new java.awt.Color(255, 255, 255));
        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(810, 630));

        jPanel1.setPreferredSize(new java.awt.Dimension(810, 630));
        jPanel1.setLayout(null);

        tblAgendamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Data", "Serviço", "Funcionário", "Cliente", "Tipo de pagamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblAgendamentos.setPreferredSize(new java.awt.Dimension(375, 80));
        tblAgendamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAgendamentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAgendamentos);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 280, 760, 300);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Agendamentos");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 240, 169, 34);
        jPanel1.add(txtBuscaNome);
        txtBuscaNome.setBounds(450, 240, 160, 30);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Buscar por ID:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(320, 240, 130, 27);
        jPanel1.add(txtFuncionario);
        txtFuncionario.setBounds(320, 110, 145, 30);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Funcionário ID");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(320, 80, 96, 21);
        jPanel1.add(txtServicoId);
        txtServicoId.setBounds(170, 110, 145, 30);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Serviço ID");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(170, 80, 67, 21);
        jPanel1.add(txtDataHora);
        txtDataHora.setBounds(20, 110, 145, 30);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Data/Hora");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(20, 80, 71, 21);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cliente ID");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(470, 80, 65, 21);
        jPanel1.add(txtCliente);
        txtCliente.setBounds(470, 110, 145, 30);
        jPanel1.add(txtPagamento1);
        txtPagamento1.setBounds(620, 110, 145, 30);

        lblTipoPag1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        lblTipoPag1.setForeground(new java.awt.Color(255, 255, 255));
        lblTipoPag1.setText("Tipo de pagamento");
        jPanel1.add(lblTipoPag1);
        lblTipoPag1.setBounds(620, 80, 132, 21);

        botaoAtualizar.setBackground(new java.awt.Color(172, 137, 82));
        botaoAtualizar.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        botaoAtualizar.setForeground(new java.awt.Color(255, 255, 255));
        botaoAtualizar.setText("Atualizar");
        botaoAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAtualizarActionPerformed(evt);
            }
        });
        jPanel1.add(botaoAtualizar);
        botaoAtualizar.setBounds(470, 150, 145, 30);

        botaoExcluir.setBackground(new java.awt.Color(172, 137, 82));
        botaoExcluir.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        botaoExcluir.setForeground(new java.awt.Color(255, 255, 255));
        botaoExcluir.setText("Excluir");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(botaoExcluir);
        botaoExcluir.setBounds(620, 150, 145, 30);

        botaoAgendar.setBackground(new java.awt.Color(172, 137, 82));
        botaoAgendar.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        botaoAgendar.setForeground(new java.awt.Color(255, 255, 255));
        botaoAgendar.setText("Agendar");
        botaoAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAgendarActionPerformed(evt);
            }
        });
        jPanel1.add(botaoAgendar);
        botaoAgendar.setBounds(320, 150, 145, 30);

        lblTitulo.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitulo.setText("Cadastrar Agendamento");
        jPanel1.add(lblTitulo);
        lblTitulo.setBounds(0, 0, 810, 41);

        txtID.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtID.setMinimumSize(new java.awt.Dimension(64, 25));
        txtID.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel1.add(txtID);
        txtID.setBounds(40, 150, 50, 30);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("ID:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(20, 150, 54, 27);

        botaoBuscar1.setBackground(new java.awt.Color(172, 137, 82));
        botaoBuscar1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        botaoBuscar1.setForeground(new java.awt.Color(255, 255, 255));
        botaoBuscar1.setText("Buscar");
        botaoBuscar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscar1ActionPerformed(evt);
            }
        });
        jPanel1.add(botaoBuscar1);
        botaoBuscar1.setBounds(620, 240, 160, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 140, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 646, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        try{
            int id = Integer.parseInt(txtID.getText());
            AgendamentosDao agendDao = new AgendamentosDao();
            int resp = JOptionPane.showConfirmDialog(this, "Deseja excluir o cadastro selecionado ?");
            if(resp == JOptionPane.YES_OPTION){
                agendDao.excluir(id);
                JOptionPane.showMessageDialog(this, "Dados excluidos.");
            }
            
            txtDataHora.setText("");
            txtServicoId.setText("");
            txtFuncionario.setText("");
            txtCliente.setText("");
            txtPagamento1.setText("");
            preencheTabela();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Falha ao excluir dados: "+ e);
        }   
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void botaoAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAgendarActionPerformed
        Agendamentos agend = new Agendamentos();
        AgendamentosDao agendDao = new AgendamentosDao();
        Conexao con = new Conexao();
        
        if(valida()){
            if(!emptyFields()){
                con.getConection();
                try{
                    if(con.getConection().isClosed()){
                        JOptionPane.showMessageDialog(this, "Falha ao conectar a banco de dados");
                    }else{
                        try{

                            agend.setDataAgendamento(txtDataHora.getText());
                            
                            //SERVICO
                            int sId = Integer.parseInt(txtServicoId.getText());
                            ServicosDao servDao = new ServicosDao();
                            Servicos serv = servDao.buscaServicoPorId(sId);
                              if (serv == null) {
                                JOptionPane.showMessageDialog(this, "Serviço não encontrado: " + sId);

                            }else{
                                agend.setServico(serv);
                            }
                            
                            //CLIENTE
                            int cId = Integer.parseInt(txtCliente.getText());
                            ClientesDao cliDao = new ClientesDao();
                            Clientes cli = cliDao.buscaClientePorId(cId);
                              if (cli == null) {
                                JOptionPane.showMessageDialog(this, "Cliente não encontrado: " + cId);

                              }else{
                                  agend.setCliente(cli);
                              }

                            //FUNCIONARIO
                            int fId = Integer.parseInt(txtFuncionario.getText());
                            FuncionariosDao funcDao = new FuncionariosDao();
                            Funcionarios func = funcDao.buscaFuncionarioPorId(fId);
                              if (func == null) {
                                JOptionPane.showMessageDialog(this, "Funcionario não encontrado: " + fId);

                              }else{
                                  agend.setFuncionario(func);
                              }
                              
                              if(serv == null || cli == null || func == null){
                                  JOptionPane.showMessageDialog(this, "Falha ao cadastrar agendamento");
                              }else{
                                agend.setTipoPagamento(txtPagamento1.getText());
                                agendDao.salvar(agend); 
                                JOptionPane.showMessageDialog(this, "Dados salvos com sucesso.");
                                preencheTabela(); 
                                txtServicoId.setText("");
                                txtDataHora.setText("");
                                txtPagamento1.setText("");
                                txtCliente.setText("");
                                txtFuncionario.setText("");
                                txtServicoId.requestFocus();   

                                con.desconnect();
                              }
                        }catch(NumberFormatException e){
                            System.out.println("Error: "+ e.getMessage());
                        }
                    }
                }catch(SQLException e){
                    System.out.println("Erro: "+ e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_botaoAgendarActionPerformed

    private void tblAgendamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAgendamentosMouseClicked
        txtDataHora.setText(tblAgendamentos.getValueAt(tblAgendamentos.getSelectedRow(), 1).toString());
        txtServicoId.setText(tblAgendamentos.getValueAt(tblAgendamentos.getSelectedRow(), 2).toString());
        txtFuncionario.setText(tblAgendamentos.getValueAt(tblAgendamentos.getSelectedRow(), 3).toString());
        txtCliente.setText(tblAgendamentos.getValueAt(tblAgendamentos.getSelectedRow(), 4).toString());
        txtPagamento1.setText(tblAgendamentos.getValueAt(tblAgendamentos.getSelectedRow(), 5).toString());
        txtID.setText(tblAgendamentos.getValueAt(tblAgendamentos.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblAgendamentosMouseClicked

    private void botaoAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAtualizarActionPerformed
        try{
            if(!emptyId()){
               int id = Integer.parseInt(txtBuscaNome.getText());
               
               String data = txtDataHora.getText();
               
               int sId = Integer.parseInt(txtServicoId.getText());
               ServicosDao servDao = new ServicosDao();
               Servicos serv = servDao.buscaServicoPorId(sId);
               
               int cId = Integer.parseInt(txtCliente.getText());
               ClientesDao cliDao = new ClientesDao();
               Clientes cli = cliDao.buscaClientePorId(cId);
               
               int fId = Integer.parseInt(txtFuncionario.getText());
               FuncionariosDao funcDao = new FuncionariosDao();
               Funcionarios func = funcDao.buscaFuncionarioPorId(fId);
               
               String tipoPagamento = txtPagamento1.getText();

               Agendamentos agend = new Agendamentos();

               agend.setServico(serv);
               agend.setDataAgendamento(data);
               agend.setTipoPagamento(tipoPagamento);
               agend.setCliente(cli);
               agend.setFuncionario(func);
               agend.setId(id);

               AgendamentosDao agendDao = new AgendamentosDao();
               agendDao.atualizar(agend);
               JOptionPane.showMessageDialog(this, "Dados atualizados com sucesso.");

                txtServicoId.setText("");
                txtDataHora.setText("");
                txtPagamento1.setText("");
                txtCliente.setText("");
                txtFuncionario.setText("");
                txtBuscaNome.setText("");
                txtID.setText("");
                txtServicoId.requestFocus();
                preencheTabela();
            }
       }catch(NumberFormatException e){
           System.out.println("Erro: "+ e.getMessage());
       }
    }//GEN-LAST:event_botaoAtualizarActionPerformed

    private void botaoBuscar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBuscar1ActionPerformed
        if(!emptyId()){
            int id = Integer.parseInt(txtBuscaNome.getText());
            AgendamentosDao agendDao = new AgendamentosDao();
            Agendamentos agend = agendDao.getAgendamentos(id);
            
            if(agend == null){
                JOptionPane.showMessageDialog(this, "Agendamento não encontrado.");
            }else{
                txtServicoId.setText(String.valueOf(agend.getServico().getId()));
                txtDataHora.setText(agend.getDataAgendamento());
                txtPagamento1.setText(agend.getTipoPagamento());
                txtCliente.setText(String.valueOf(agend.getCliente().getId()));
                txtFuncionario.setText(String.valueOf(agend.getFuncionario().getId()));
                txtID.setText(String.valueOf(id));
                preencheTabela();
            }
        }
    }//GEN-LAST:event_botaoBuscar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaAgendamentoCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaAgendamentoCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaAgendamentoCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaAgendamentoCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaAgendamentoCad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoAgendar;
    private javax.swing.JButton botaoAtualizar;
    private javax.swing.JButton botaoBuscar1;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTipoPag1;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTable tblAgendamentos;
    private javax.swing.JTextField txtBuscaNome;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtDataHora;
    private javax.swing.JTextField txtFuncionario;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPagamento1;
    private javax.swing.JTextField txtServicoId;
    // End of variables declaration//GEN-END:variables
    
    public boolean emptyFields(){
        boolean isEmpty = true;
        if(txtServicoId.getText().trim().isEmpty() || txtCliente.getText().trim().isEmpty() || txtDataHora.getText().trim().isEmpty() || txtFuncionario.getText().trim().isEmpty() || txtPagamento1.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos para cadastrar");
        }else{
            isEmpty = false;
        }
        return isEmpty;
    }
    
    public boolean valida(){
        boolean valido = true;

        String data = txtDataHora.getText();

        boolean validaData = data.matches("[0-9]{2}[/][0-9]{2}[/][0-9]{4}[-][0-9]{2}[:][0-9]{2}");

        if(validaData == false){
            JOptionPane.showMessageDialog(rootPane, "Data/Hora inválida \nFormato(xx/xx/xxxx-xx:xx)");
            valido = false;
        }
        return valido;
    }

    public boolean emptyId(){
        boolean isEmpty = true;
        if(txtBuscaNome.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Busque o agendamento por ID antes de atualizar");
        }else{
            isEmpty = false;
        }
        return isEmpty;
    }
  
    public int pegaPosicao(){
        int posicao = tblAgendamentos.getSelectedRow();
        if(posicao == -1){
            JOptionPane.showMessageDialog(rootPane, "Selecione uma linha");
        }
        return posicao;
    }

}
