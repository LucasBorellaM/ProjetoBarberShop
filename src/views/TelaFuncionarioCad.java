package views;

import conexao.Conexao;
import data.Funcionarios;
import data.FuncionariosDao;
import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lucas
 */
public class TelaFuncionarioCad extends javax.swing.JFrame {
    
    private void preencheTabela(){
        FuncionariosDao funcDao = new FuncionariosDao();
        
        List<Funcionarios> listaFuncionarios = funcDao.listaFuncionarios();
        DefaultTableModel tableFuncionarios = (DefaultTableModel) TblFuncionarios.getModel();
        tableFuncionarios.setNumRows(0);
        
        for(Funcionarios f: listaFuncionarios){
            Object[] obj = new Object[]{
                f.getId(),
                f.getNome(),
                f.getCpf(),
                f.getDataNascimento(),
                f.getTelefone()
            };
            tableFuncionarios.addRow(obj);
            funcDao.listaFuncionarios();
        }
    }


    public TelaFuncionarioCad() {
        initComponents();
        this.setTitle("FUNCIONARIOS");
        this.setLocationRelativeTo(null);
        Color corFundo = new Color(24, 9, 0);
        jPanel1.setBackground(corFundo);
        txtID.setEnabled(false);
        preencheTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TblFuncionarios = new javax.swing.JTable();
        txtDataNasc = new javax.swing.JTextField();
        txtBuscaFuncionario = new javax.swing.JTextField();
        txtCpf = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        botaoCadastrar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        botaoExcluir = new javax.swing.JButton();
        botaoBuscar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtNome1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(810, 630));

        jPanel1.setPreferredSize(new java.awt.Dimension(810, 630));
        jPanel1.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Telefone");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(610, 80, 58, 21);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 25)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Funcionários");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 240, 160, 34);

        txtID.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtID.setMinimumSize(new java.awt.Dimension(64, 25));
        txtID.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel1.add(txtID);
        txtID.setBounds(40, 150, 50, 30);

        TblFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "CPF", "Data de Nascimento", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TblFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TblFuncionariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TblFuncionarios);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 280, 760, 300);

        txtDataNasc.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtDataNasc.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel1.add(txtDataNasc);
        txtDataNasc.setBounds(410, 110, 160, 30);

        txtBuscaFuncionario.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtBuscaFuncionario.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel1.add(txtBuscaFuncionario);
        txtBuscaFuncionario.setBounds(450, 240, 160, 30);

        txtCpf.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtCpf.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel1.add(txtCpf);
        txtCpf.setBounds(210, 110, 160, 30);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ID:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(20, 150, 54, 27);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Data de Nascimento:");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(410, 80, 180, 21);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Buscar por nome:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(280, 240, 160, 27);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("CPF:");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(210, 80, 50, 21);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cadastrar Funcionários");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 10, 800, 41);

        txtTelefone.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtTelefone.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel1.add(txtTelefone);
        txtTelefone.setBounds(610, 110, 160, 30);

        botaoCadastrar.setBackground(new java.awt.Color(172, 137, 82));
        botaoCadastrar.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        botaoCadastrar.setForeground(new java.awt.Color(255, 255, 255));
        botaoCadastrar.setText("Cadastrar");
        botaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCadastrarActionPerformed(evt);
            }
        });
        jPanel1.add(botaoCadastrar);
        botaoCadastrar.setBounds(210, 150, 160, 30);

        btnAtualizar.setBackground(new java.awt.Color(172, 137, 82));
        btnAtualizar.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnAtualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAtualizar);
        btnAtualizar.setBounds(410, 150, 160, 30);

        botaoExcluir.setBackground(new java.awt.Color(172, 137, 82));
        botaoExcluir.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        botaoExcluir.setForeground(new java.awt.Color(255, 255, 255));
        botaoExcluir.setText("Excluir");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });
        jPanel1.add(botaoExcluir);
        botaoExcluir.setBounds(610, 150, 160, 30);

        botaoBuscar.setBackground(new java.awt.Color(172, 137, 82));
        botaoBuscar.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        botaoBuscar.setForeground(new java.awt.Color(255, 255, 255));
        botaoBuscar.setText("Buscar");
        botaoBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(botaoBuscar);
        botaoBuscar.setBounds(620, 240, 160, 30);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nome: ");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(20, 80, 54, 27);

        txtNome1.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtNome1.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel1.add(txtNome1);
        txtNome1.setBounds(20, 110, 160, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TblFuncionariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TblFuncionariosMouseClicked
        txtNome1.setText(TblFuncionarios.getValueAt(TblFuncionarios.getSelectedRow(), 1).toString());
        txtCpf.setText(TblFuncionarios.getValueAt(TblFuncionarios.getSelectedRow(), 2).toString());
        txtDataNasc.setText(TblFuncionarios.getValueAt(TblFuncionarios.getSelectedRow(), 3).toString());
        txtTelefone.setText(TblFuncionarios.getValueAt(TblFuncionarios.getSelectedRow(), 4).toString());
        txtID.setText(TblFuncionarios.getValueAt(TblFuncionarios.getSelectedRow(), 0).toString());

    }//GEN-LAST:event_TblFuncionariosMouseClicked

    private void botaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCadastrarActionPerformed
        Funcionarios func = new Funcionarios();
        FuncionariosDao funcDao = new FuncionariosDao();
        Conexao con = new Conexao();
        int resposta;

        if(valida()){
            if(!emptyFields()){
                func = getFuncionarios();
                con.getConection();
                try{
                    if(con.getConection().isClosed()){
                        JOptionPane.showMessageDialog(this, "Falha ao conectar a banco de dados");
                    }else{
                        resposta = funcDao.salvar(func);

                        if(resposta == 1){
                            JOptionPane.showMessageDialog(this, "Dados inseridos com sucesso.");
                            txtNome1.setText("");
                            txtCpf.setText("");
                            txtDataNasc.setText("");
                            txtTelefone.setText("");
                            txtNome1.requestFocus();
                        }else if(resposta == 1062){
                            JOptionPane.showMessageDialog(this, "Dados já cadastrados");
                        }else{
                            JOptionPane.showConfirmDialog(this, "Falha ao cadastrar");
                        }
                        con.desconnect();
                    }
                }catch(SQLException e){
                    JOptionPane.showMessageDialog(this, "SQL ERROR: "+ e);
                }
            }
        }
        preencheTabela();
    }//GEN-LAST:event_botaoCadastrarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        try{
            int id = Integer.parseInt(txtID.getText());
            String nome = txtNome1.getText();
            String cpf = txtCpf.getText();
            String dataNasci = txtDataNasc.getText();
            String telefone = txtTelefone.getText();

            Funcionarios func = new Funcionarios();

            func.setNome(nome);
            func.setCpf(cpf);
            func.setDataNascimento(dataNasci);
            func.setTelefone(telefone);
            func.setId(id);

            FuncionariosDao funcDao = new FuncionariosDao();
            funcDao.atualizar(func);
            JOptionPane.showMessageDialog(this, "Dados atualizados com sucesso.");
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Falha ao alterar dados: "+ e);
        }
        txtNome1.setText("");
        txtCpf.setText("");
        txtDataNasc.setText("");
        txtTelefone.setText("");
        txtID.setText("");
        preencheTabela();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        try{
            int id = Integer.parseInt(txtID.getText());
            FuncionariosDao funcDao = new FuncionariosDao();
            int resp = JOptionPane.showConfirmDialog(this, "Ao excluir esse funcionário, todos agendamentos cadastrados a esse id serão excluidos.\n Deseja continuar ?");
            if(resp == JOptionPane.YES_OPTION){
                funcDao.excluir(id);
                JOptionPane.showMessageDialog(this, "Dados excluidos.");
            }

            txtNome1.setText("");
            txtCpf.setText("");
            txtDataNasc.setText("");
            txtTelefone.setText("");
            preencheTabela();

        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Falha ao excluir dados: "+ e);
        }
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void botaoBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoBuscarActionPerformed
        String nomebuscado = txtBuscaFuncionario.getText().trim();
        try{
            if(nomebuscado.isEmpty()){
                DefaultTableModel tableClientes = (DefaultTableModel) TblFuncionarios.getModel();
                tableClientes.setNumRows(0);
            }

            FuncionariosDao funcDao = new FuncionariosDao();
            List<Funcionarios> funcionariosEncontrados = funcDao.buscaFuncionarioPorNome(nomebuscado);

            if(funcionariosEncontrados.isEmpty()){
                JOptionPane.showMessageDialog(this, "Nenhum cliente encontrado com esse nome.");
            }else{
                DefaultTableModel tableClientes = (DefaultTableModel) TblFuncionarios.getModel();
                tableClientes.setNumRows(0);

                for(Funcionarios f: funcionariosEncontrados){
                    tableClientes.addRow(new Object[]{f.getId(),
                        f.getNome(),
                        f.getCpf(),
                        f.getDataNascimento(),
                        f.getTelefone()});
            }
        }

        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "ERRO: "+ e);
        }
    }//GEN-LAST:event_botaoBuscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionarioCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionarioCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionarioCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionarioCad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFuncionarioCad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TblFuncionarios;
    private javax.swing.JButton botaoBuscar;
    private javax.swing.JButton botaoCadastrar;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscaFuncionario;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtDataNasc;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome1;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    public boolean emptyFields(){
        boolean isEmpty = true;
        if(txtNome1.getText().trim().isEmpty() || txtCpf.getText().trim().isEmpty() || txtDataNasc.getText().trim().isEmpty() || txtTelefone.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos para cadastrar");
        }else{
            isEmpty = false;
        }
        return isEmpty;
    }
    public boolean valida(){
        boolean valido = true;

        String nome = txtNome1.getText();
        String cpf = txtCpf.getText();
        String data = txtDataNasc.getText();
        String telefone = txtTelefone.getText();

        boolean validaCpf = cpf.matches("[0-9]{3}[.][0-9]{3}[.][0-9]{3}[-][0-9]{2}");
        boolean validaData = data.matches("[0-9]{2}[/][0-9]{2}[/][0-9]{4}");
        boolean validaTelefone = telefone.matches("[(][0-9]{2}[)][0-9]{5}[-][0-9]{4}");

        if(validaCpf == false && validaData == true && validaTelefone == true){
            JOptionPane.showMessageDialog(rootPane, "Cpf inválida \nFormato(xxx.xxx.xxx-xx)");
            valido = false;
        }
        else if(validaCpf == true && validaData == false && validaTelefone == true){
            JOptionPane.showMessageDialog(rootPane, "Data inválida \nFormato(xx/xx/xxxx)");
            valido = false;
        }
        else if(validaCpf == true && validaData == true && validaTelefone == false){
            JOptionPane.showMessageDialog(rootPane, "Telefone inválido \nFormato((xx)xxxxx-xxxx)");
            valido = false;
        }
        else if(validaCpf == false || validaData == false || validaTelefone == false){
            JOptionPane.showMessageDialog(rootPane, "Alguma informação está com o formato errado \nFormatos: Cpf(xxx.xxx.xxx-xx) \nData (xx/xx/xxxx) \nTelefone((xx)xxxxx-xxxx)");
            valido = false;
        }
        return valido;
    }

    public Funcionarios getFuncionarios(){
        String nome = txtNome1.getText();
        String cpf = txtCpf.getText();
        String data = txtDataNasc.getText();
        String telefone = txtTelefone.getText();
        
        Funcionarios func = new Funcionarios(WIDTH, nome, cpf, data, telefone);
        return func;
    }
    
    public boolean emptyId(){
        boolean isEmpty = true;
        if(txtID.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Digite o ID antes de atualizar");
        }else{
            isEmpty = false;
        }
        return isEmpty;
    }


}
